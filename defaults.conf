# -*- mode: yaml -*-
# vim: set ft=yaml ts=2 sw=2 sts=2 et ai :

name: null # Set this in `project.conf`

aws:
  ami_id: ami-6889d200
  region: us-east-1
  instance_type: t2.micro
  
  # These are set by running `fab setup`, and stored in `private.conf`
  access_key: null
  secret_key: null

  # These are set by running `fab setup`, and stored in `project.conf`
  elastic_ip: null
  security_groups: null
  subnet_id: null
  vpc_id: null
  internet_gateway_id: null
  route_table_id: null
  address_allocation_id: null

bitbucket:
  # These are set by running `fab setup`, and stored in `private.conf`
  user: null
  token: null

git:
  # Set these in `project.conf`
  repo: null
  email: null
  name: null

craft:
  ref: 367c280a870aa02e1e4edbe3593d14d7735756c2
  md5: fb49340965895bb1cedd49118e7aa9e4
  translations: False # Turn support for static translation on in `project.conf`
  plugins:
    - name: guzzle 
      repo_name: craft-guzzle
      author: davist11
      ref: 272d6aee264d222672aaa9d2b5b640518b6d5428
      md5: 172bca9907b8d64f270de1de632fdcf2
    - name: prune
      repo_name: craftcms-prune
      author: mattstauffer
      ref: 744bfb0a538739c00afe2cf98d3cd6be3d4f340b
      md5: e5fe9b2916091a578fc6fa29ec531426

dev:
  user: vagrant
  group: vagrant
  password: vagrant
  path: /project
  ops_conf_path: /home/vagrant/ops.conf
  mysql_user: vagrant
  mysql_pass: vagrant
  mysql_db: vagrant
  envs: null
  # Set sensitve envs in `private.conf`, otherwise use `project.conf`
  # Use the format:
  # envs:
  #   ENV_VAR_NAME: env_var_value
  # If using the php package dotenv, put value like "true" in quotes
  # envs:
  #   APP_DEBUG: "true"

  vagrant:
    box: ubuntu-14.04-amd64
    box_url: https://oss-binaries.phusionpassenger.com/vagrant/boxes/2014-05-11/ubuntu-14.04-amd64-vbox.box
    box_download_checksum_type: md5
    box_download_checksum: e70cb1c527cfd265e5477608cdf99312

web:
  # Set these in `project.conf`
  server: null
  server_name: null
  private_key_path: salt/root/web/files/web.pem
  public_key_path: salt/root/web/files/web.pub
  # Deploy keys will be used in the authorized_keys files for all web users
  # Set deploy keys in the format:
  # deploy_keys:
  #   name: "public_key"
  deploy_keys: null
  open_ports:
    - 80
    - 443
    - 22

  vagrant:
    box: dummy
    box_url: https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

  admin:
    user: ubuntu
    group: ubuntu
    private_key_path: salt/root/web/files/admin.pem
    public_key_path: salt/root/web/files/admin.pub

  stages:
    production:
      server_name: null # Set this in `project.conf`
      user: production
      group: production
      port: 5001
      mysql_user: production
      mysql_db: production
      mysql_pass: production # Set this in `private.conf` or `~/ops.conf`
      mysql_host: localhost 
      envs: null
      # Set sensitve envs in `private.conf`, otherwise use `project.conf`
      # Use the format:
      # envs:
      #   ENV_VAR_NAME: env_var_value
      # If using the php package dotenv, put value like "true" in quotes
      # envs:
      #   APP_DEBUG: "true"


    staging:
      server_name: null # Set this in `project.conf`
      user: staging
      group: staging
      port: 5002
      mysql_user: staging
      mysql_db: staging
      mysql_pass: staging # Set this in `private.conf` or `~/ops.conf`
      mysql_host: localhost 
      envs: null
      # Set sensitve envs in `private.conf`, otherwise use `project.conf`
      # Use the format:
      # envs:
      #   ENV_VAR_NAME: env_var_value
      # If using the php package dotenv, put value like "true" in quotes
      # envs:
      #   APP_DEBUG: "true"

    preview:
      server_name: null # Set this in `project.conf`
      user: staging
      user: preview
      group: preview
      port: 5003
      mysql_user: preview
      mysql_db: preview
      mysql_pass: preview # Set this in `private.conf` or `~/ops.conf`
      mysql_host: localhost 
      envs: null
      # Set sensitve envs in `private.conf`, otherwise use `project.conf`
      # Use the format:
      # envs:
      #   ENV_VAR_NAME: env_var_value
      # If using the php package dotenv, put value like "true" in quotes
      # envs:
      #   APP_DEBUG: "true"

